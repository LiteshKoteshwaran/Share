@using _12_04.Models
@model _12_04.Models.Employee

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/Layout.cshtml";

}
@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h6 class="alert alert-info" data-toggle="collapse" data-target="#EmpDetails">Employee Details</h6>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model=>model.EmployeeID)
        @Html.HiddenFor(model=>model.CommunicationAddress.AddressID)
        @Html.HiddenFor(model=>model.PermanentAddress.AddressID)

        <div class="row" id="EmpDetails">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <h6 class="alert alert-info" data-toggle="collapse" data-target="#ComAddress">Communication Address</h6>
        <hr />
        <div id="ComAddress" class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.CommunicationAddress.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CommunicationAddress.Address1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CommunicationAddress.Address1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.CommunicationAddress.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CommunicationAddress.Address2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CommunicationAddress.Address2, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.CommunicationAddress.Address3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CommunicationAddress.Address3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CommunicationAddress.Address3, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.CommunicationAddress.State.States, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.CommunicationAddress.State.StateID,new SelectList(Model.CommunicationAddress.States,"StateID","States"),"Select State", new { id="ddlCommunicationState",  @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CommunicationAddress, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.CommunicationAddress.District.Districts, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.CommunicationAddress.District.DistrictID, new SelectList(Model.CommunicationAddress.Districts, "DistrictID", "Districts"), "Select Districts", new {id="ddlCommunicationDistrict"  ,@class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CommunicationAddress.District, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.CommunicationAddress.City.Cities, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.CommunicationAddress.City.CityID, new SelectList(Model.CommunicationAddress.Cities,"CityID", "Cities"), "Select City", new {id= "ddlCommunicationCity" ,@class = "form-control"  })
                    @Html.ValidationMessageFor(model => model.CommunicationAddress.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.CommunicationAddress.Pincode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CommunicationAddress.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CommunicationAddress.Pincode, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <h6 class="alert alert-info" data-toggle="collapse" data-target="#PermanentAddress">Permanent Address</h6>
        <div action="/action_page.php">
            <input type="checkbox" onclick="HideFieldsForPermanent()" name="IsPermanent" value="True" > Is Permanent Address same as Communication Address??<br>
        </div>
        <hr />
        <div id="IsPermanent">
            <div id="PermanentAddress" class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PermanentAddress.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.PermanentAddress.Address1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.Address1, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PermanentAddress.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.PermanentAddress.Address2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.Address2, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PermanentAddress.Address3, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.PermanentAddress.Address3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.Address3, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PermanentAddress.State.States, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.PermanentAddress.State.StateID, new SelectList(Model.PermanentAddress.States, "StateID", "States"), "Please select", new {id="ddlPermanentState" , @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.PermanentAddress.State, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PermanentAddress.District.Districts, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.PermanentAddress.District.DistrictID, new SelectList(Model.PermanentAddress.Districts, "DistrictID", "Districts"), "Please select", new { id= "ddlPermanentDistrict",@class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.District, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PermanentAddress.City.Cities, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.PermanentAddress.City.CityID, new SelectList(Model.PermanentAddress.Cities, "CityID", "Cities"), "Please select", new { id= "ddlPermanentCity", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.City, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.PermanentAddress.Pincode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.PermanentAddress.Pincode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PermanentAddress.Pincode, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div align="right">
        <button class="btn btn-primary">Save</button>
        <button class="btn btn-primary" onclick="@Url.Action("Index","Home")"> Cancel</button>
    </div>
}
